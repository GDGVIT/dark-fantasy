{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","app/dist/dark-fantasy.js","dark-fantasy.min.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"dark","angular","module","controller","$rootScope","Config","NavService","mc","this","chapter_name","name","google_plus_link","id","gdg_link","twitter_link","twitter","facebook_link","facebook","meetup_link","meetup","canonical","domain","registerNavListener","tab","navTab","config","$routeProvider","$locationProvider","$mdThemingProvider","hashPrefix","when","templateUrl","controllerAs","otherwise","redirectTo","theme","primaryPalette","accentPalette","factory","google_api","pwa_id","dateFormat","cover","title","subtitle","button","text","url","setNavTab","tabValue","navListener","getNavTab","listenerToRegister","$http","$sce","vm","loading","jsonp","success","data","desc","aboutMe","trustAsHtml","coverPhoto","status","error","$scope","nav","console","log","$log","$filter","events","past","future","headers","Accept","timeout","items","about","replace","push","response","upcomingError","debug","getPastEventsPage","page","pages","pastError","filter","hashLinky","startNode","currentNode","childNodes","nodeType","ELEMENT_NODE","TEXT_NODE","hashtagRegex","textContent","linkifiedDOM","innerHTML","insertBefore","removeChild","document","createElement","inputDOM","input","linkify","action","$timeout","handleError","item","actor","object","itemTitle","html","published","actorImage","entry","entries","content","Date","RegExp","join","image","substr","via","body","date","updated","reshares","resharers","totalItems","plusones","plusoners","comments","replies","icon","news","gapi","plusone","go","photos","pwa","p","feed","x","photo","link","href","src","alt","$t","summary","error_msg"],"mappings":"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","file":"dark-fantasy.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","var dark = angular.module('dark-fantasy', ['ngRoute', 'ngSanitize', 'ngAria', 'ngAnimate', 'ngMaterial']);\n\ndark.controller('MainController', function ($rootScope, Config, NavService) {\n    var mc = this;\n    mc.chapter_name = Config.name;\n    mc.google_plus_link = 'https://plus.google.com/' + Config.id;\n    mc.gdg_link = 'https://developers.google.com/groups/chapter/' + Config.id + '/';\n    mc.twitter_link = Config.twitter ? 'https://twitter.com/' + Config.twitter: null;\n    mc.facebook_link = Config.facebook ? 'https://www.facebook.com/' + Config.facebook: null;\n    mc.meetup_link = Config.meetup ? 'http://www.meetup.com/' + Config.meetup: null;\n    $rootScope.canonical = Config.domain;\n\n    NavService.registerNavListener(function (tab) {\n        mc.navTab = tab;\n    });\n});\n\ndark.config(function ($routeProvider, $locationProvider, $mdThemingProvider) {\n\n    $locationProvider.hashPrefix('!');\n\n    $routeProvider.\n        when(\"/about\", {templateUrl: 'app/about/about.html', controller: \"AboutController\", controllerAs: 'vm'}).\n        when(\"/news\", {templateUrl: 'app/news/news.html', controller: \"NewsController\", controllerAs: 'vm'}).\n        when(\"/events\", {templateUrl: 'app/events/events.html', controller: \"EventsController\", controllerAs: 'vm'}).\n        when(\"/photos\", {templateUrl: 'app/photos/photos.html', controller: \"PhotosController\", controllerAs: 'vm'}).\n        otherwise({ redirectTo: '/about' });\n\n    $mdThemingProvider.theme('default')\n        .primaryPalette('blue')\n        .accentPalette('deep-orange');\n});\n\ndark.factory('Config', function () {\n    return {\n        // TODO Modify these to configure your app\n        'name'          : 'GDG VIT Vellore',\n        'id'            : '101018908043689071742',//101018908043689071742\n        'google_api'    : 'AIzaSyBLmjZggwek6J_xpdffvOXDcdDn_6sP6iY',\n        'pwa_id'        : '6131627325679555265', // Picasa Web Album id, must belong to Google+ id above\n        'domain'        : 'http://www.gdgvitvellore.com',\n        'twitter'       : 'gdgvitvellore',\n        'facebook'      : 'gdgvitvellore',\n        'meetup'        : 'gdgvitvellore',\n        // Change to 'EEEE, MMMM d, y - H:mm' for 24 hour time format.\n        'dateFormat'    : 'EEEE, MMMM d, y - h:mm a',\n        'cover' : {\n            title: 'Worldwide GDG Events',\n            subtitle: 'Directory of developer events organized by tags and displayed on a global map.',\n            button: {\n                text: 'Find local events',\n                url: 'http://gdg.events/'\n            }\n        }\n        // To update the snippet which is used for sharing, see the TODO in the index.html.\n    };\n});\n\ndark.factory('NavService', function () {\n    var navTab = '0';\n    var navListener;\n\n    return {\n        setNavTab: setNavTab,\n        getNavTab: getNavTab,\n        registerNavListener: registerNavListener\n    };\n\n    function setNavTab(tabValue) {\n        navTab = tabValue;\n        navListener(navTab);\n    }\n\n    function getNavTab() {\n        return navTab;\n    }\n\n    function registerNavListener(listenerToRegister) {\n        navListener = listenerToRegister;\n    }\n});\n\ndark.controller('AboutController', function ($http, $sce, Config, NavService) {\n    var vm = this;\n    vm.loading = true;\n    NavService.setNavTab(0);\n    vm.cover = Config.cover;\n\n    $http.jsonp('https://www.googleapis.com/plus/v1/people/' + Config.id +\n            '?callback=JSON_CALLBACK&fields=aboutMe%2Ccover%2Cimage%2CplusOneCount&key=' + Config.google_api).\n        success(function (data) {\n            vm.desc = data.aboutMe;\n            $sce.trustAsHtml(vm.desc);\n\n            if (data.cover && data.cover.coverPhoto.url) {\n                vm.cover.url = data.cover.coverPhoto.url;\n            }\n            vm.loading = false;\n            vm.status = 'ready';\n        })\n        .error(function (error) {\n            vm.desc = \"Sorry, we failed to retrieve the About text from the Google+ API.\";\n            vm.loading = false;\n            vm.status = 'ready';\n        });\n});\n\ndark.controller('NavController', ['$scope', function ($scope) {\n\t$scope.nav = [\n\t\t{'name': 'About Us'},\n\t\t{'name': 'What We Do'},\n\t\t{'name': 'Our Works'},\n\t\t{'name': 'Team'},\n\t\t{'name': 'Contact Us'}\n\t];\n\tconsole.log($scope.nav);\n}])\ndark.controller(\"EventsController\", function ($http, $log, $filter, Config, NavService) {\n    var vm = this;\n    NavService.setNavTab(2);\n    vm.chapter_name = Config.name;\n    vm.loading = true;\n    vm.dateFormat = Config.dateFormat;\n    vm.events = { past:[], future:[] };\n    var url = 'https://www.googleapis.com/plus/v1/people/' + Config.id + '/activities/public?callback=angular.callbacks._0&maxResults=20&key=' + Config.google_api+ ''\n    var testUrl = 'http://hub.gdgx.io/api/v1/chapters/' + Config.id + '/events/upcoming?callback=JSON_CALLBACK';\n    var headers = { 'headers': { 'Accept': 'application/json;' }, 'timeout': 2000 };\n    $http.jsonp(url, headers)\n        .success(function (data) {\n            for (var i = data.items.length - 1; i >= 0; i--) {\n                data.items[i].about = data.items[i].about.replace(/<br\\s*\\/?><br\\s*\\/?><br\\s*\\/?><br\\s*\\/?>/g, '<br><br>');\n                vm.events.future.push(data.items[i]);\n            }\n            vm.events.future = $filter('orderBy')(vm.events.future, 'start', false);\n            vm.loading = false;\n            vm.status = 'ready';\n        })\n        .error(function (response) {\n            vm.upcomingError = \"Sorry, we failed to retrieve the upcoming events from the GDG-X Hub API.\";\n            vm.loading = false;\n            vm.status = 'ready';\n            $log.debug('Sorry, we failed to retrieve the upcoming events from the GDG-X Hub API: ' + response);\n        });\n\n    var getPastEventsPage = function(page) {\n        var url = 'http://hub.gdgx.io/api/v1/chapters/' + Config.id + '/events/past?callback=JSON_CALLBACK&page=' + page;\n        var headers = { 'headers': {'Accept': 'application/json;'}, 'timeout': 2000 };\n        $http.jsonp(url, headers)\n            .success(function (data) {\n                var i;\n                for (i = data.items.length - 1; i >= 0; i--) {\n                    data.items[i].about = data.items[i].about.replace(/<br\\s*\\/?><br\\s*\\/?><br\\s*\\/?><br\\s*\\/?>/g, '<br><br>');\n                    vm.events.past.push(data.items[i]);\n                }\n                if (data.pages === page) {\n                    vm.events.past = $filter('orderBy')(vm.events.past, 'start', true);\n                    vm.loading = false;\n                    vm.status = 'ready';\n                } else {\n                    getPastEventsPage(page + 1);\n                }\n            })\n            .error(function (response) {\n                vm.pastError = \"Sorry, we failed to retrieve the past events from the GDG-X Hub API.\";\n                vm.loading = false;\n                vm.status = 'ready';\n                $log.debug('Sorry, we failed to retrieve the past events from the GDG-X Hub API: ' + response);\n            });\n    };\n    getPastEventsPage(1);\n});\n\n// Google+ hashtag linky from http://plnkr.co/edit/IEpLfZ8gO2B9mJcTKuWY?p=preview\ndark.filter('hashLinky', function() {\n    var ELEMENT_NODE = 1;\n    var TEXT_NODE = 3;\n    var linkifiedDOM = document.createElement('div');\n    var inputDOM = document.createElement('div');\n\n    return function(input) {\n        inputDOM.innerHTML = input;\n        return hashLinky(inputDOM).innerHTML;\n    };\n\n    function hashLinky(startNode) {\n        var i, currentNode;\n        for (i = 0; i < startNode.childNodes.length; i++) {\n            currentNode = startNode.childNodes[i];\n\n            switch (currentNode.nodeType) {\n                case ELEMENT_NODE:\n                    hashLinky(currentNode);\n                    break;\n                case TEXT_NODE:\n                    var hashtagRegex = /#([A-Za-z0-9-_]+)/g;\n                    currentNode.textContent =  currentNode.textContent.replace(hashtagRegex,\n                        '<a href=\"https://plus.google.com/s/%23$1\" target=\"_blank\">#$1</a>');\n\n                    linkifiedDOM.innerHTML = currentNode.textContent;\n                    i += linkifiedDOM.childNodes.length - 1;\n\n                    while (linkifiedDOM.childNodes.length) {\n                        startNode.insertBefore(linkifiedDOM.childNodes[0], currentNode);\n                    }\n                    startNode.removeChild(currentNode);\n            }\n        }\n        return startNode;\n    }\n});\n\n// HTML-ified linky from http://plnkr.co/edit/IEpLfZ8gO2B9mJcTKuWY?p=preview\ndark.filter('htmlLinky', function($filter) {\n    var ELEMENT_NODE = 1;\n    var TEXT_NODE = 3;\n    var linkifiedDOM = document.createElement('div');\n    var inputDOM = document.createElement('div');\n\n    return function(input) {\n        inputDOM.innerHTML = input;\n        return linkify(inputDOM).innerHTML;\n    };\n\n    function linkify(startNode) {\n        var i, currentNode;\n        for (i = 0; i < startNode.childNodes.length; i++) {\n            currentNode = startNode.childNodes[i];\n\n            switch (currentNode.nodeType) {\n                case ELEMENT_NODE:\n                    linkify(currentNode);\n                    break;\n                case TEXT_NODE:\n                    linkifiedDOM.innerHTML = $filter('linky')(currentNode.textContent, '_blank');\n                    i += linkifiedDOM.childNodes.length - 1;\n\n                    while (linkifiedDOM.childNodes.length) {\n                        startNode.insertBefore(linkifiedDOM.childNodes[0], currentNode);\n                    }\n\n                    startNode.removeChild(currentNode);\n            }\n        }\n        return startNode;\n    }\n});\n\ndark.controller('NavController', ['$scope', function ($scope) {\n\t$scope.nav = [\n\t\t{'name': 'About Us', 'action': '1'},\n\t\t{'name': 'What We Do', 'action': '2'},\n\t\t{'name': 'Our Works', 'action': '3'},\n\t\t{'name': 'Team', 'action': '4'},\n\t\t{'name': 'Contact Us', 'action': '5'}\n\t];\n\tconsole.log($scope.nav);\n}])\ndark.controller(\"NewsController\", function ($http, $timeout, $filter, $log, $sce, Config, NavService) {\n    var vm = this;\n    NavService.setNavTab(1);\n    vm.loading = true;\n    vm.chapter_name = Config.name;\n\n    $http.jsonp('https://www.googleapis.com/plus/v1/people/' + Config.id +\n        '/activities/public?callback=JSON_CALLBACK&maxResults=20&key=' + Config.google_api)\n        .success(function (response) {\n            var entries = [], i;\n            var item, actor, object, itemTitle, html;\n            var published, actorImage, entry;\n\n            if (!response.items) {\n                handleError('Response from server contained no news items.');\n                return;\n            }\n\n            for (i = 0; i < response.items.length; i++) {\n                item = response.items[i];\n                actor = item.actor || {};\n                object = item.object || {};\n                itemTitle = object.content;\n                published = $filter('date')(new Date(item.published), 'fullDate');\n                html = [];\n\n                html.push(itemTitle.replace(new RegExp('\\n', 'g'), '<br />').replace('<br><br>', '<br />'));\n                html = html.join('');\n                html = $sce.trustAsHtml(html);\n\n                actorImage = actor.image.url;\n                actorImage = actorImage.substr(0, actorImage.length - 2) + '16';\n\n                entry = {\n                    via: {\n                        name: 'Google+',\n                        url: item.url\n                    },\n                    published: published,\n                    body: html,\n                    date: item.updated,\n                    reshares: (object.resharers || {}).totalItems,\n                    plusones: (object.plusoners || {}).totalItems,\n                    comments: (object.replies || {}).totalItems,\n                    icon: actorImage,\n                    item: item,\n                    object: object\n                };\n\n                entries.push(entry);\n            }\n            vm.news = $filter('orderBy')(entries, 'date', true);\n            $timeout(function () {\n                gapi.plusone.go();\n            });\n            vm.loading = false;\n            vm.status = 'ready';\n        })\n        .error(handleError);\n\n    function handleError(error) {\n        vm.desc = \"Sorry, we failed to retrieve the news from the Google+ API.\";\n        vm.loading = false;\n        vm.status = 'ready';\n        $log.debug('Sorry, we failed to retrieve the news from the Google+ API: ' + error);\n    }\n});\n\ndark.controller(\"PhotosController\", function ($http, Config, NavService) {\n    var vm = this;\n    vm.loading = true;\n    NavService.setNavTab(3);\n    vm.chapter_name = Config.name;\n    vm.photos = [];\n\n    var pwa = 'https://picasaweb.google.com/data/feed/api/user/' + Config.id + '/albumid/' + Config.pwa_id +\n        '?access=public&alt=json-in-script&kind=photo&max-results=50&fields=entry(title,link/@href,summary,content/@src)&v=2.0&callback=JSON_CALLBACK';\n\n    $http.jsonp(pwa).\n        success(function (data) {\n            var p = data.feed.entry;\n            for (var x in p) {\n                var photo = {\n                    link: p[x].link[1].href,\n                    src: p[x].content.src,\n                    alt: p[x].title.$t,\n                    title: p[x].summary.$t\n                };\n                vm.photos.push(photo);\n            }\n            vm.loading = false;\n        })\n        .error(function (data) {\n            vm.error_msg = \"Sorry, we failed to retrieve the Photos from the Picasa Web Albums API. Logging out of your Google Account and logging back in may resolve this issue.\";\n            vm.loading = false;\n        });\n});",null],"sourceRoot":"/source/"}